Basic Customization
===================

Introduction
------------

You can customize Plone in two ways:

.. class:: incremental

1. With add-on packages (including ones you create yourself)

2. Through the web (TTW)

.. class:: incremental

You are *strongly* encouraged to keep customizations in packages, **but**

.. class:: incremental

TTW customizations are a great way to **get started**


Replace the Site Logo
---------------------

.. class:: incremental

* One of the first tasks any new Plone user wants to do

* The logo is in a *skin layer*, which is part of a *theme*

* Let's talk about **Themes**

Plone Themes
------------

We’ve changed between themes already, using the Theme control panel. But how
exactly does this work?

.. class:: todo

* Click ‘Site Setup’ in your personal tools

* Click ‘Zope Management Interface’

* Click ‘portal_skins’

* Click ‘Properties’ tab at the top of the page


Skin Layers
-----------

.. class:: incremental

* A ‘Theme’ is made up of a number of skin layers

* Plone finds images, scripts and templates in these layers

* Plone searches layers in order to find what it seeks

* The first match found wins

* Items found in a Skin Layer are called Skin Elements

.. class:: note incremental

Take note of the first layer in every Theme you see. What is it called?

Find the Current Logo
---------------------

.. class:: todo

* Click on the ‘Contents’ tab

* Find the ‘sunburst_images’ layer and click

How can we know this is the right one?

.. class:: todo

* Open a new tab, point at localhost:8080/Plone

* View page source, search for ‘logo’

* Find <img /> tag for the portal logo

  * What is the filename of the ‘src’ of that tag?

Customize the Logo
------------------

.. class:: todo

* Return to the portal_skins tab in your browser

* Click on ‘logo.png’ in the sunburst_images layer

* Click on the ‘Customize’ button

* This creates a copy of the existing image in the ‘custom’ skin layer

* ‘custom’ is always the first layer in a theme


Replace the Custom Logo
-----------------------

Looking at your new copy in the custom folder...

.. class:: todo

* Click on ‘Choose File’

* Select ‘logo.png’ on your desktop in the site resources folder

* Click ‘Choose’

* Click ‘Upload’

* Return to the site home page and reload

What Happened?
--------------

.. class:: incremental

* You created a new image with the same name

* You put it in a layer searched **before** the layer where the original image
  is found

* Your new image is found **before** the original image

* Your new image is used **instead of** the original image

Replace the Site Footer
-----------------------

.. class:: incremental

* Another in the list of things to do first

* The footer is part of a set of elements in Plone that are generated by
  *viewlets*

* Let's talk about **Viewlets**

Viewlets
--------

.. class:: incremental

* In Plone, shared page structure is built using ‘viewlets’

* All viewlets have an html template

* Some viewlets have a ‘view’ which is python code that can calculate
  information

* Viewlets can be customized or replaced

Plone Viewlets
--------------

.. class:: todo

* In your browser, return to the site home page

* Add ‘/@@manage-viewlets’ to the end of the url and reload the page

* This ‘hidden view’ provides access to the viewlets in your site.

* Note that there are ‘Viewlet Managers’ and ‘Viewlets’

* Viewlets can be shown, hidden, and re-ordered

* In code, you can even move them between managers

Find the Right Viewlet
----------------------

We want to replace the bit at the bottom of the page about the ‘Plone Open
Source CMS’

.. class:: todo

* Find this visual element in the page

* What is the *name* of this viewlet?

Customize the Viewlet
---------------------

.. class:: todo

* Click on ‘Site Setup’ in the personal tools menu

* Click on the ‘Zope Management Interface’

* Click on ‘portal_view_customizations’

* Search for ‘plone.footer’, click on it

* Click ‘Customize’


Intro to TAL
------------

.. class:: incremental

* **TAL** = Zope Template Attribute Language

* Dynamic page elements in Zope Page Templates

* Also used in Chameleon (next-gen page template system)

* Valid XML

  .. class:: incremental

  * Page templates can be rendered in a browser

  * Eases the path to involving designers in theming


TAL Statements
--------------

.. class:: incremental

* ``tal:<operator>=”<expression>”``

* The ``tal:`` is a ‘namespace identifier’ (xml)

  * Not strictly required, but helpful

  * Strongly encouraged :)


TAL Operators
-------------

.. class:: incremental

* ``tal:define`` - set a value or values

* ``tal:condition`` - test truth value to execute

* ``tal:repeat`` - loop over sets of values

* ``tal:content`` - set the content of a tag

* ``tal:replace`` - replace an entire tag

* ``tal:attributes`` - set html/xml attributes of a tag

* ``tal:omit-tag`` - if expression is false, omit the tag


TAL Expressions
---------------

.. class:: incremental

* **TALES** - TAL Expression Syntax

* Path Expressions - ``here/Title``, ``view/year``

* String Expressions - ``string:my ${value}``

* Not Expressions - ``not: here/isAnon``

* Python Expressions - ``python: here.Title()``

* and more ...

TAL Resources
-------------

.. class:: incremental

* Weblion Wiki TAL page:

  * http://weblion.psu.edu/trac/weblion/wiki/TAL

  * excellent introduction

* Zope 2 Book:

  * http://docs.zope.org/zope2/zope2book/

  * complete, in-depth coverage.  

Review the Current Footer
-------------------------

.. class:: note mini

::

    <div metal:define-macro="portal_footer" i18n:domain="plone" class="row">
      <div class="cell width-full position-0">
        <div id="portal-footer">
          <p>
            <span i18n:translate="description_copyright" tal:omit-tag="">
              The
              <span i18n:name="plonecms" tal:omit-tag="">
                <a href="http://plone.org" i18n:translate="label_plone_cms">
                  Plone<sup>&reg;</sup> Open Source CMS/WCM
                </a>
              </span>
              is
              <acronym title="Copyright" 
                       i18n:name="copyright" 
                       i18n:attributes="title title_copyright;">&copy;</acronym>
              2000-<tal:year i18n:name="current_year" tal:content="view/year" />
              by the
              <span i18n:name="plonefoundation" tal:omit-tag="">
                <a href="http://plone.org/foundation" i18n:translate="label_plone_foundation">
                  Plone Foundation
                </a> and friends.
              </span>
            </span>
            <span i18n:translate="description_license" tal:omit-tag="">
              Distributed under the 
              <span i18n:name="license" tal:omit-tag="">
                <a href="http://creativecommons.org/licenses/GPL/2.0/" 
                   i18n:translate="label_gnu_gpl_licence">GNU GPL license
                </a>
              </span>.
            </span>
          </p>
        </div>
      </div>
    </div>

Review the Current Footer
-------------------------

Okay, so that's a bit much to look at all at once.  Let's break it down a bit.

The Wrapper
-----------

.. class:: note mini

::

    <div metal:define-macro="portal_footer" i18n:domain="plone" class="row">
      <div class="cell width-full position-0">
        <div id="portal-footer">
          <p>
            ...
          </p>
        </div>
      </div>
    </div>

.. class:: incremental

* Provides basic outer structure for the entire footer

* Notice there is only one paragraph in the footer

* **i18n:domain** provides scaffolding for internationalization

The Top-level Structure
-----------------------

.. class:: note mini

::

    <span i18n:translate="description_copyright" tal:omit-tag="">The
      ...
    </span>
    <span i18n:translate="description_license" tal:omit-tag="">
      ...
    </span>

.. class:: incremental

* **i18n:translate** registers two translatable phrases with the 
  internationalization system

* Note the use of the ``tal:omit-tag`` operator

  * This allows us to use i18n attributes, but not need to keep the html tags
    they are part of.

The Copyright Phrase
--------------------

This is the meat of the footer, and a good object lesson in TAL.  Let's take
a close look at what's going on, one part at a time

.. class:: note mini

::

    <span i18n:translate="description_copyright" tal:omit-tag="">
      The
      <span i18n:name="plonecms" tal:omit-tag="">
        <a href="http://plone.org" i18n:translate="label_plone_cms">
          Plone<sup>&reg;</sup> Open Source CMS/WCM
        </a>
      </span>
      is
      ...
    </span>

.. class:: incremental

* Note again the liberal use of **tal:omit-tag**.  There will be precious
  little html left when we're through with this.

The Copyright Phrase
--------------------

.. class:: note mini

::

    <span i18n:translate="description_copyright" tal:omit-tag="">
      ...
      <acronym title="Copyright" 
                 i18n:name="copyright" 
                 i18n:attributes="title title_copyright;">&copy;</acronym>
        2000-<tal:year i18n:name="current_year" tal:content="view/year" />
    </span>

.. class:: incremental

* **i18n:attributes** means we can even translate attributes of our html tags

* **tal:content** means the <tal:year /> tag is being filled with something, 
  what is the source?

* What kind of **TALES** expression is ``view/year``?  What is ``view``?

Review the Current Footer
-------------------------

So, after all that is rendered, what show's up in the user's browser?

.. class:: incremental note mini

::

    <div class="row">
      <div class="cell width-full position-0">
        <div id="portal-footer">
          <p>The
            <a href="http://plone.org">Plone<sup>&reg;</sup> Open Source CMS/WCM</a>
            is <acronym title="Copyright">&copy;</acronym> 2000-2012 by the
            <a href="http://plone.org/foundation">Plone Foundation</a>
            and friends.  Distributed under the
            <a href="http://creativecommons.org/licenses/GPL/2.0/">
              GNU GPL license</a>.
          </p>
        </div>
      </div>
    </div>

Test Your Skills
----------------

Okay, so you've seen some TAL in action. And you've gotten a quick
introduction to the basic syntax. Let's see what we can do with what we've
just seen.

Create a new footer, see how many of the following goals you can achieve:

.. class:: todo smaller

* Text: ‘This site and all its content is ©2010-2011 by Happy Racquet Tennis
  Club’

* The last year listed should alway be the current year

* The club name should be a variable, set and then used (and perhaps
  eventually found from our ``view``)

* If the first year listed is the same as the current year, it should not show
  (nor should the dash)

My solution
-----------

.. class:: incremental note mini

::

    <div metal:define-macro="portal_footer"
         i18n:domain="plone"
         class="row">
      <div class="cell width-full position-0"
           tal:define="clubname string:Happy Racquet Tennis Club;
                       thisyear view/year;
                       firstyear python:2010;
                       firstyear_display string${firstyear}&ndash;;
                       isfirstyear python:firstyear == thisyear;">
        <div id="portal-footer">
          <p>This site and all its content is &copy;
            <span tal:condition="not:isfirstyear" 
                  tal:replace="firstyear_display">
              [2000]&ndash;
            </span>
            <span tal:replace="thisyear">[2011]</span>
            by
            <span tal:replace="clubname">[Copyright Holder Name]</span>
          </p>
        </div>
      </div>
    </div>

